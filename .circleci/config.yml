version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.2.3

jobs:
  build_and_deploy_staging:
    working_directory: ~/spa-build-wd
    docker:
      - image: cimg/node:16.13.1-browsers
    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install
      - restore_cache:
          key: spa-build-wd-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm install
      - run: npm install --save-dev firebase-tools
      - save_cache:
          key: spa-build-wd-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      - run:
          name: "Run test"
          command: npm run test
      - run:
          name: "Build application for staging"
          command: npm run build:staging
      - run:
          name: "Deploy app to Firebase Hosting (staging)"
          command: |
            ./node_modules/.bin/firebase use staging --token=$FIREBASE_TOKEN
            ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN

  build_and_deploy_prod:
    working_directory: ~/spa-build-wd
    docker:
      - image: cimg/node:16.13.1-browsers
    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install
      - restore_cache:
          key: spa-build-wd-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm install
      - run: npm install --save-dev firebase-tools
      - save_cache:
          key: spa-build-wd-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      - run:
          name: "Run test"
          command: npm run test
      - run:
          name: "Build application for production"
          command: npm run build:prod
      - run:
          name: "Deploy app to Firebase Hosting (production)"
          command: |
            ./node_modules/.bin/firebase use production --token=$FIREBASE_TOKEN
            ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN

workflows:
  deploy:
    jobs:
      - build_and_deploy_staging:
          filters:
            branches:
              only: staging
      - build_and_deploy_prod:
          filters:
            branches:
              only: master
